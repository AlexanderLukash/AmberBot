import json

import cooldowns
import nextcord
import requests
from nextcord import SlashOption, ButtonStyle
from nextcord.ext.commands import Bot
from nextcord.ext.commands import Cog
from nextcord.ui import Button, View


# todo: GitHubCogs


class GitDel(nextcord.ui.View):

    def __init__(self):
        super().__init__()
        self.value = None

    @nextcord.ui.button(label="–í–∏–¥–∞–ª–∏—Ç–∏", style=nextcord.ButtonStyle.green, emoji='üóë')
    async def profile_del(self, buttun: nextcord.ui.Button, interaction: nextcord.Interaction):
        self.value = True
        self.stop()
    @nextcord.ui.button(label="–í—ñ–¥–º—ñ–Ω–∏—Ç–∏", style=nextcord.ButtonStyle.red, emoji='‚úñ')
    async def profile_del_cansel(self, buttun: nextcord.ui.Button, interaction: nextcord.Interaction):
        self.value = False
        self.stop()

class __GitHubUserCog(Cog):

    def __init__(self, bot: Bot):
        self.bot = bot

    @nextcord.slash_command(name=f'gitprofile', description=f'üíô –î–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å GitHub üíõ')
    async def github_add_profile(self, interaction: nextcord.Interaction, username=SlashOption(
        name="–Ω—ñ–∫–Ω–µ–π–º",
        description="–≤—Å—Ç–∞–≤ —Å—é–¥–∏ —Å–≤—ñ–π github –Ω—ñ–∫–Ω–µ–π–º")):

        url = f"https://api.github.com/users/{username}"
        response = requests.get(url)
        if response.status_code == 200:
            user_info = response.json()
            login = user_info['login']
            file_name = "github_users.json"
            try:
                # Load current data from the file (if available)
                with open(file_name, 'r') as file:
                    data = json.load(file)
            except FileNotFoundError:
                # If no file is found, create an empty dictionary
                data = {}

            if str(interaction.user.id) in data:
                data[str(interaction.user.id)] = interaction.user.name, interaction.user.id, login, user_info[
                    'followers'], user_info['public_repos'], user_info['starred_url'].count('{/repo}'), user_info[
                    'avatar_url'], user_info['html_url'], user_info['created_at'][:10], user_info['location']
                with open(file_name, 'w') as file:
                    json.dump(data, file, indent=4)
                with open(file_name, 'r') as file:
                    data = json.load(file)
                data = data[str(interaction.user.id)]
                embed = nextcord.Embed(
                    title='‚ùå –¢–∏ –≤–∂–µ –¥–æ–¥–∞–≤ —Å–≤—ñ–π GitHub!',
                    description='–ó–∞—Ä–∞–∑ —Ç–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫.',
                    color=nextcord.Color.dark_purple())
                embed.set_author(name=f'{data[2]}', icon_url=f'{data[6]}')
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.set_image(url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True)
            else:
                data[interaction.user.id] = interaction.user.name, interaction.user.id, login, user_info[
                    'followers'], user_info['public_repos'], user_info['starred_url'].count('{/repo}'), user_info[
                    'avatar_url'], user_info['html_url'], user_info['created_at'][:10], user_info['location']

                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
                with open(file_name, 'w') as file:
                    json.dump(data, file, indent=4)
                with open(file_name, 'r') as file:
                    data = json.load(file)
                embed = nextcord.Embed(
                    title='‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–ª–∏ —Å–≤—ñ–π GitHub:',
                    description='–ó–∞—Ä–∞–∑ –≤—ñ–Ω –≤–∏–≥–ª—è–¥–∞—î —Ç–∞–∫',
                    color=nextcord.Color.dark_purple())
                data = data[str(interaction.user.id)]
                embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.add_field(name='Location:', value=f'{data[9]}')
                embed.add_field(name='Created at:', value=f'{data[8]}')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_footer(text='GitHub Stats',
                                 icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                await interaction.send(embed=embed, ephemeral=True)
                embed = nextcord.Embed(
                    title=f'üßë‚Äçüíª {data[2]}',
                    description=f'**GitHub** –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ <@{interaction.user.id}>',
                    color=nextcord.Color.dark_purple(), url=f'{data[7]}')
                embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.add_field(name='Location:', value=f'{data[9]}')
                embed.add_field(name='Created at:', value=f'{data[8]}')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_footer(text='GitHub Stats',
                                 icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                link_button = Button(label="GitHub", style=ButtonStyle.link,
                                     url=data[7], emoji='üë§')
                link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                          url=f'https://github.com/{login}?tab=repositories', emoji='üìó')
                my_view = View()
                my_view.add_item(link_button)
                my_view.add_item(link_repo_button)
                channel = self.bot.get_channel(1151422479303192587)
                await channel.send(embed=embed, view=my_view)
        else:
            embed = nextcord.Embed(
                title='‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ —Å–µ—Ä–≤–µ—Ä—É!',
                description='–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å GitHub. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ, –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó.',
                color=nextcord.Color.dark_purple())
            embed.set_image(url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
            embed.set_thumbnail(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
            embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
            await interaction.send(embed=embed, ephemeral=True)

    @nextcord.slash_command(name=f'github', description=f'üíô GitHub –£—á–∞—Å–Ω–∏–∫–∞ üíõ')
    async def github_profile(self, interaction: nextcord.Interaction, member: nextcord.Member = SlashOption(
        name="—É—á–∞—Å–Ω–∏–∫",
        description="—è–∫—â–æ –Ω–µ –æ–±—Ä–∞–Ω–∏–π, —Ç–æ –ø–æ–±–∞—á–∏—à —Å–≤—ñ–π github",
        default=None
    )):

        file_name = "github_users.json"
        try:
            # Load current data from the file (if available)
            with open(file_name, 'r') as file:
                data = json.load(file)
        except FileNotFoundError:
            # If no file is found, create an empty dictionary
            data = {}

        if member == None:
            if str(interaction.user.id) in data:
                url = f"https://api.github.com/users/{data[str(interaction.user.id)][2]}"
                response = requests.get(url)
                if response.status_code == 200:
                    user_info = response.json()
                    login = user_info['login']
                    data[str(interaction.user.id)] = interaction.user.name, interaction.user.id, login, user_info[
                        'followers'], user_info['public_repos'], user_info['starred_url'].count('{/repo}'), user_info[
                        'avatar_url'], user_info['html_url'], user_info['created_at'][:10], user_info['location']
                    with open(file_name, 'w') as file:
                        json.dump(data, file, indent=4)
                    with open(file_name, 'r') as file:
                        data = json.load(file)
                    data = data[str(interaction.user.id)]
                    embed = nextcord.Embed(
                        title=f'üßë‚Äçüíª {data[2]}',
                        description=f'**GitHub** –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ <@{interaction.user.id}>',
                        color=nextcord.Color.dark_purple(), url=f'{data[7]}')
                    embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                    embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                    embed.add_field(name='Followers: ', value=f'{data[3]}')
                    embed.add_field(name='Stars: ', value=f'{data[5]}')
                    embed.add_field(name='Location:', value=f'{data[9]}')
                    embed.add_field(name='Created at:', value=f'{data[8]}')
                    embed.set_thumbnail(url=f'{data[6]}')
                    embed.set_image(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                    embed.set_footer(text='GitHub Stats',
                                     icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                    link_button = Button(label="GitHub", style=ButtonStyle.link,
                                         url=data[7], emoji='üë§')
                    link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                              url=f'https://github.com/{login}?tab=repositories', emoji='üìó')
                    my_view = View()
                    my_view.add_item(link_button)
                    my_view.add_item(link_repo_button)
                    await interaction.send(embed=embed, view=my_view, ephemeral=True)
                else:
                    embed = nextcord.Embed(
                        title='‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ —Å–µ—Ä–≤–µ—Ä—É!',
                        description='–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å GitHub. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ, –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó.',
                        color=nextcord.Color.dark_purple())
                    embed.set_image(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                    embed.set_thumbnail(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                    embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                    embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                    await interaction.send(embed=embed, ephemeral=True)
            else:
                embed = nextcord.Embed(
                    title='‚ùå –¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –¥–æ–¥–∞–≤–∞–≤ Github.',
                    description='–£—á–∞—Å–Ω–∏–∫ –Ω–µ –¥–æ–¥–∞–≤–∞–≤ GitHub –¥–æ —Å–≤–æ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.',
                    color=nextcord.Color.dark_purple())
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                embed.set_thumbnail(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True)
        else:
            if str(member.id) in data:
                url = f"https://api.github.com/users/{data[str(member.id)][2]}"
                response = requests.get(url)
                if response.status_code == 200:
                    user_info = response.json()
                    login = user_info['login']
                    data[str(member.id)] = member.name, member.id, login, user_info[
                        'followers'], user_info['public_repos'], user_info['starred_url'].count('{/repo}'), user_info[
                        'avatar_url'], user_info['html_url'], user_info['created_at'][:10], user_info['location']
                    with open(file_name, 'w') as file:
                        json.dump(data, file, indent=4)
                    with open(file_name, 'r') as file:
                        data = json.load(file)
                    data = data[str(member.id)]
                    embed = nextcord.Embed(
                        title=f'üßë‚Äçüíª {data[2]}',
                        description=f'GitHub –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ <@{member.id}>',
                        color=nextcord.Color.dark_purple(), url=f'https://github.com/{data[2]}')
                    embed.add_field(name='Link:', value=f'{data[7]}')
                    embed.add_field(name=f'Repositories: ', value=f'{data[4]}', inline=False)
                    embed.add_field(name='Followers: ', value=f'{data[3]}', inline=False)
                    embed.add_field(name='Stars: ', value=f'{data[5]}', inline=False)
                    embed.set_image(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                    embed.set_footer(text='GitHub Stats',
                                     icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                    link_button = Button(label="GitHub", style=ButtonStyle.link,
                                         url=data[7], emoji='üë§')
                    link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                              url=f'https://github.com/{login}?tab=repositories', emoji='üìó')
                    my_view = View()
                    my_view.add_item(link_button)
                    my_view.add_item(link_repo_button)
                    await interaction.send(embed=embed, view=my_view, ephemeral=True)
                else:
                    embed = nextcord.Embed(
                        title='‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ —Å–µ—Ä–≤–µ—Ä—É!',
                        description='–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å GitHub. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ, –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó.',
                        color=nextcord.Color.dark_purple())
                    embed.set_image(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                    embed.set_thumbnail(
                        url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                    embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                    embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                    await interaction.send(embed=embed, ephemeral=True)
            else:
                embed = nextcord.Embed(
                    title='‚ùå –¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –¥–æ–¥–∞–≤–∞–≤ Github.',
                    description='–£—á–∞—Å–Ω–∏–∫ –Ω–µ –¥–æ–¥–∞–≤–∞–≤ GitHub –¥–æ —Å–≤–æ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.',
                    color=nextcord.Color.dark_purple())
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                embed.set_thumbnail(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True)

    @nextcord.slash_command(name=f'gitupdate', description=f'üíô –û–Ω–æ–≤–∏—Ç–∏ —Å–≤—ñ–π GitHub üíõ')
    @cooldowns.cooldown(1, 259200, bucket=cooldowns.SlashBucket.author)
    async def github_profile_update(self, interaction: nextcord.Interaction):
        file_name = "github_users.json"
        try:
            # Load current data from the file (if available)
            with open(file_name, 'r') as file:
                data = json.load(file)
        except FileNotFoundError:
            # If no file is found, create an empty dictionary
            data = {}

        if str(interaction.user.id) in data:
            url = f"https://api.github.com/users/{data[str(interaction.user.id)][2]}"
            response = requests.get(url)
            if response.status_code == 200:
                user_info = response.json()
                login = user_info['login']
                data[str(interaction.user.id)] = interaction.user.name, interaction.user.id, login, user_info[
                    'followers'], user_info['public_repos'], user_info['starred_url'].count('{/repo}'), user_info[
                    'avatar_url'], user_info['html_url'], user_info['created_at'][:10], user_info['location']
                with open(file_name, 'w') as file:
                    json.dump(data, file, indent=4)
                with open(file_name, 'r') as file:
                    data = json.load(file)
                data = data[str(interaction.user.id)]
                embed = nextcord.Embed(
                    title=f'üßë‚Äçüíª {data[2]}',
                    description=f'–í–∏ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–∏–ª–∏ —Å–≤—ñ–π GitHub –≤ –∫–∞–Ω–∞–ª—ñ:  <#1151422479303192587>',
                    color=nextcord.Color.dark_purple(), url=f'{data[7]}')
                embed.add_field(name='–ù–∞—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–µ —á–µ—Ä–µ–∑:', value='**3 –î–Ω—ñ.**')
                embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.add_field(name='Location:', value=f'{data[9]}')
                embed.add_field(name='Created at:', value=f'{data[8]}')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_footer(text='GitHub Stats',
                                 icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                link_button = Button(label="GitHub", style=ButtonStyle.link,
                                     url=data[7], emoji='üë§')
                link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                          url=f'https://github.com/{login}?tab=repositories', emoji='üìó')
                my_view = View()
                my_view.add_item(link_button)
                my_view.add_item(link_repo_button)
                await interaction.send(embed=embed, view=my_view, ephemeral=True)
                embed = nextcord.Embed(
                    title=f'üßë‚Äçüíª {data[2]}',
                    description=f'**GitHub** –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ <@{interaction.user.id}>',
                    color=nextcord.Color.dark_purple(), url=f'{data[7]}')
                embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.add_field(name='Location:', value=f'{data[9]}')
                embed.add_field(name='Created at:', value=f'{data[8]}')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_footer(text='GitHub Stats',
                                 icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                link_button = Button(label="GitHub", style=ButtonStyle.link,
                                     url=data[7], emoji='üë§')
                link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                          url=f'https://github.com/{login}?tab=repositories', emoji='üìó')
                my_view = View()
                my_view.add_item(link_button)
                my_view.add_item(link_repo_button)
                channel = self.bot.get_channel(1151422479303192587)
                await channel.send(embed=embed, view=my_view)
            else:
                embed = nextcord.Embed(
                    title='‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ —Å–µ—Ä–≤–µ—Ä—É!',
                    description='–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å GitHub. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ, –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó.',
                    color=nextcord.Color.dark_purple())
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
                embed.set_thumbnail(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True)
        else:
            embed = nextcord.Embed(
                title='‚ùå –¢–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–≤ Github.',
                description='–í–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–ª–∏ GitHub –¥–æ —Å–≤–æ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.',
                color=nextcord.Color.dark_purple())
            embed.add_field(name='–ö–æ–º–∞–Ω–¥–∞ —â–æ–± –¥–æ–¥–∞—Ç–∏:', value='`/gitprofile`')
            embed.set_image(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
            embed.set_thumbnail(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
            embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
            await interaction.send(embed=embed, ephemeral=True)

    @nextcord.slash_command(name=f'gitdel', description=f'üíô –í–∏–¥–∞–ª–∏—Ç–∏ —Å–≤—ñ–π GitHub üíõ')
    async def github_profile_del(self, interaction: nextcord.Interaction):
        file_name = "github_users.json"
        try:
            # Load current data from the file (if available)
            with open(file_name, 'r') as file:
                data = json.load(file)
        except FileNotFoundError:
            # If no file is found, create an empty dictionary
            data = {}

        if str(interaction.user.id) in data:
            embed = nextcord.Embed(
                title='üëÄ –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ?',
                description="–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–≤'—è–∑–∞—Ç–∏ —Å–≤—ñ—Ç **GitHub**?",
                color=nextcord.Color.dark_purple())
            embed.set_image(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
            embed.set_thumbnail(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
            embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
            view = GitDel()
            await interaction.send(embed=embed, ephemeral=True, view=view, delete_after=60)
            await view.wait()
            if view.value is None:
                return
            elif view.value:
                del data[str(interaction.user.id)]

                # Write the updated data to a file
                with open(file_name, 'w') as file:
                    json.dump(data, file, indent=4)
                embed = nextcord.Embed(
                    title='‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Å–≤—ñ–π GitHub',
                    description='–©–æ–± –∑–Ω–æ–≤—É –¥–æ–¥–∞—Ç–∏ **GitHub** —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–æ–º–∞–Ω–¥–æ—é: `/gitprofile`',
                    color=nextcord.Color.dark_purple())
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_thumbnail(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
                embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True)
            else:
                data = data[str(interaction.user.id)]
                embed = nextcord.Embed(
                    title=f'üßë‚Äçüíª {data[2]}',
                    description=f'**GitHub** –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ <@{interaction.user.id}>',
                    color=nextcord.Color.dark_purple(), url=f'{data[7]}')
                embed.add_field(name='Link:', value=f'**{data[7]}**', inline=False)
                embed.add_field(name=f'Repositories: ', value=f'{data[4]}')
                embed.add_field(name='Followers: ', value=f'{data[3]}')
                embed.add_field(name='Stars: ', value=f'{data[5]}')
                embed.add_field(name='Location:', value=f'{data[9]}')
                embed.add_field(name='Created at:', value=f'{data[8]}')
                embed.set_thumbnail(url=f'{data[6]}')
                embed.set_image(
                    url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694586847/github_card_pjwvvp.png')
                embed.set_footer(text='GitHub Stats',
                                 icon_url='https://static-00.iconduck.com/assets.00/github-icon-2048x1988-jzvzcf2t.png')
                link_button = Button(label="GitHub", style=ButtonStyle.link,
                                     url=data[7], emoji='üë§')
                link_repo_button = Button(label="Repositories", style=ButtonStyle.link,
                                          url=f'https://github.com/{data[2]}?tab=repositories', emoji='üìó')
                my_view = View()
                my_view.add_item(link_button)
                my_view.add_item(link_repo_button)
                await interaction.send(embed=embed, view=my_view, ephemeral=True)
        else:
            embed = nextcord.Embed(
                title='‚ùå –¢–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–≤ Github.',
                description='–í–∏ –Ω–µ –¥–æ–¥–∞–≤–∞–ª–∏ GitHub –¥–æ —Å–≤–æ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.',
                color=nextcord.Color.dark_purple())
            embed.add_field(name='–ö–æ–º–∞–Ω–¥–∞ —â–æ–± –¥–æ–¥–∞—Ç–∏:', value='`/gitprofile`')
            embed.set_image(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694437277/error_pcueb3.png')
            embed.set_thumbnail(
                url='https://res.cloudinary.com/dndstfjbu/image/upload/v1694435809/001_1-3000x3000_1_fzv705.png')
            embed.set_footer(text=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_author(name=interaction.user.name, icon_url=interaction.user.avatar.url)
            await interaction.send(embed=embed, ephemeral=True)

def register_github_cogs(bot: Bot) -> None:
    bot.add_cog(__GitHubUserCog(bot))
