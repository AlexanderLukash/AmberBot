import random

import aiohttp
import nextcord
import openai
import pyshorteners as pyshorteners
import replicate
import requests
import translators as ts
from nextcord import SlashOption, ButtonStyle
from nextcord.ext import commands
from nextcord.ext.commands import Cog, Bot
from nextcord.ui import Button, View


# todo: UserCogs
class __MainUserCog(Cog):

    def __init__(self, bot: Bot):
        self.bot = bot

    openai.api_key = "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"

    # Mention user
    @nextcord.slash_command(name=f'tag', description=f'üíô –í—ñ–¥–º—ñ—Ç–∏—Ç–∏ —É—á–∞—Å–Ω–∏–∫–∞ üíõ')
    async def tag(self, interaction: nextcord.Interaction, user: nextcord.Member):
        embed = nextcord.Embed(title='üîî –£—á–∞—Å–Ω–∏–∫',
                               description=f'**{user.mention}, —Ç–µ–±–µ –≥—É–∫–∞—î –≥–∞–π–¥–∞–º–∞–∫–∞: {interaction.user.mention}**',
                               colour=nextcord.Color.red())
        embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
        embed.set_thumbnail(url=interaction.user.avatar.url)
        await interaction.response.send_message(embed=embed, delete_after=900)
        await user.send(embed=embed, delete_after=900)

    # Show avatar
    @nextcord.slash_command(name=f'avatar', description=f'üíô –ü–æ–±–∞—á–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ —Å–≤—ñ–π üíõ')
    async def avatar(self, interaction: nextcord.Interaction, member: nextcord.Member = SlashOption(
        name="—É—á–∞—Å–Ω–∏–∫",
        description="—è–∫—â–æ –Ω–µ –æ–±—Ä–∞–Ω–∏–π, —Ç–æ –ø–æ–±–∞—á–∏—à —Å–≤—ñ–π –∞–≤–∞—Ç–∞—Ä",
        default=None
    )):
        if member == None:
            download_button = Button(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", style=ButtonStyle.blurple, url=interaction.user.avatar.url)
            embed = nextcord.Embed(title="üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=interaction.user.avatar.url)
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_image(url=interaction.user.avatar.url)
            embed.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {interaction.user.name}.')
            my_view = View(timeout=180)
            my_view.add_item(download_button)
            await interaction.response.send_message(embed=embed, view=my_view, delete_after=200)
        else:
            download_button = Button(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", style=ButtonStyle.blurple, url=member.avatar.url)
            embed = nextcord.Embed(title="üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=member.avatar.url)
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_image(url=member.avatar.url)
            embed.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {member.name}.')
            my_view = View(timeout=180)
            my_view.add_item(download_button)
            await interaction.response.send_message(embed=embed, view=my_view, delete_after=200)

    # Show server avatar
    @nextcord.slash_command(name=f'serverava', description=f'üíô –ü–æ–±–∞—á–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä —Å–µ—Ä–≤–µ—Ä—É üíõ')
    async def avaserver(self, interaction: nextcord.Interaction):
        download_button = Button(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", style=ButtonStyle.blurple, url=interaction.guild.icon.url)
        embed = nextcord.Embed(title="üîó –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", url=interaction.guild.icon.url)
        embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
        embed.set_image(url=interaction.guild.icon.url)
        embed.set_footer(text=f'–ê–≤–∞—Ç–∞—Ä —Å–µ—Ä–≤–µ—Ä–∞: {interaction.guild.name}.')
        my_view = View(timeout=180)
        my_view.add_item(download_button)
        await interaction.send(embed=embed, view=my_view, ephemeral=True, delete_after=200)

    # Server Info
    @nextcord.slash_command(name=f'server', description=f'üíô –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä üíõ')
    async def server(self, interaction: nextcord.Interaction):
        format = "**%d** %b | %Y "
        name = interaction.guild.name
        description = str(interaction.guild.description)
        role_count = len(interaction.guild.roles)
        id = str(interaction.guild.id)
        memberCount = str(interaction.guild.member_count)
        text_channels = len(interaction.guild.text_channels)
        voice_channels = len(interaction.guild.voice_channels)
        channels = text_channels + voice_channels
        icon = str(interaction.guild.icon.url)
        embed = nextcord.Embed(
            title=name,
            color=nextcord.Color.red()
        )
        embed.set_thumbnail(url=icon)
        embed.set_author(name="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä: ", icon_url=self.bot.user.avatar.url)
        embed.add_field(name=":id: Server ID", value=id, inline=True)
        embed.add_field(name=":clock1: –°—Ç–≤–æ—Ä–µ–Ω–∏–π", value=f"{interaction.guild.created_at.strftime(format)}",
                        inline=True)
        embed.add_field(name=f":closed_lock_with_key: –†–æ–ª—ñ", value=f"**{role_count}** –†–æ–ª–µ–π")
        embed.add_field(name=f":busts_in_silhouette: –£—á–∞—Å–Ω–∏–∫–∏ ({memberCount})", value=f"**{memberCount}** –£—á–∞—Å–Ω–∏–∫—ñ–≤",
                        inline=True)
        embed.add_field(name=f":speech_balloon: –ö–∞–Ω–∞–ª–∏ ({channels})",
                        value=f"**{text_channels}** –¢–µ–∫—Å—Ç–æ–≤—ñ| **{voice_channels}** –ì–æ–ª–æ—Å–æ–≤—ñ")
        embed.add_field(name="üçº –°—Ç–≤–æ—Ä–µ–Ω–∏–π", value="by <@872455283560042526>")
        embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
        await interaction.send(embed=embed, ephemeral=True, delete_after=60)

    # Randomly
    @nextcord.slash_command(name=f'random', description=f'üíô –í–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ üíõ')
    async def roll(self, interaction: nextcord.Interaction, snum: int = SlashOption(
        name="–¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º",
        description="–¥–æ —á–∏—Å–ª–∞:",
        default=None
    )):
        if snum == None:
            embed = nextcord.Embed(title='üé≤ –í–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ:', description=f"**{(random.randint(1, 101))}**",
                                   color=nextcord.Color.purple())
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            await interaction.send(embed=embed, delete_after=100)
        else:
            embed = nextcord.Embed(title='üé≤ –í–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ:', description=f"**{(random.randint(1, int(snum)))}**",
                                   color=nextcord.Color.purple())
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            await interaction.send(embed=embed, delete_after=30)

    # Coin
    @nextcord.slash_command(name=f'coin', description=f'üíô –ü—ñ–¥–∫–∏–Ω—å –º–æ–Ω–µ—Ç–∫—É üíõ')
    async def coin(self, interaction: nextcord.Interaction):
        variants = ['–û—Ä–µ–ª', '–†–µ—à–∫–∞']
        coin = random.choice(variants)
        embed = nextcord.Embed(title='ü™ô –í–∏–ø–∞–ª–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –º–æ–Ω–µ—Ç–∏:', description=f"**{coin}**",
                               colour=nextcord.Color.purple())
        embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
        if coin == '–û—Ä–µ–ª':
            embed.set_thumbnail(
                url='https://cdn.discordapp.com/attachments/1016748092810346507/1053567689689407528/1.png')
        else:
            embed.set_thumbnail(
                url='https://media.discordapp.net/attachments/1016748092810346507/1053567595548258404/9f4b6da930092858.png')
        await interaction.send(embed=embed, delete_after=30)

    # mems
    @nextcord.slash_command(name=f'meme', description=f'üíô –ü—Ä–∏–∫–æ–ª—å—á—ñ–∫ üíõ')
    async def meme(self, interaction: nextcord.Interaction):
        embed = nextcord.Embed(title="", description="", colour=nextcord.Color.purple())

        async with aiohttp.ClientSession() as cs:
            URL = ['https://www.reddit.com/r/RussiaUkraineWarMemes/new.json?sort=hot',
                   'https://www.reddit.com/r/ukrainememes/new.json?sort=hot',
                   'https://www.reddit.com/r/uamemesforces/new.json?sort=hot',
                   'https://www.reddit.com/r/ukraine22memes/new.json?sort=hot',
                   'https://www.reddit.com/r/UkrainianMemes/new.json?sort=hot',
                   'https://www.reddit.com/r/Ukraine_in_memes/new.json?sort=hot',
                   'https://www.reddit.com/r/dankmemes/new.json?sort=hot']
            async with cs.get(random.choice(URL)) as r:
                res = await r.json()
                embed.set_image(url=res['data']['children'][random.randint(0, 25)]['data']['url'])
                embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
                embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                await interaction.send(embed=embed)

    # weathering
    @nextcord.slash_command(name=f'weather', description=f'üíô –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ üíõ')
    async def weather(self, interaction: nextcord.Interaction, city: str = None):
        if city == None:
            embed = nextcord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –º—ñ—Å—Ç–æ!",
                                   description='–í–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ –º—ñ—Å—Ç–æ, –¥–µ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.',
                                   colour=nextcord.Color.red())
            embed.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```/weather citi```', inline=False)
            embed.add_field(name='–ù–∞–∑–≤—É –º—ñ—Å—Ç–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç–∏:', value='```–Ω–∞ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π —Ç–∞ –º–æ—Å–∫–∞–ª—å—Å—å–∫—ñ–π –º–æ–≤—ñ.```',
                            inline=False)
            embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            await interaction.send(embed=embed, ephemeral=True, delete_after=60)
        else:
            api_key = "f2954a7666f59b7c9b62f994ad7298b6"
            base_url = "http://api.openweathermap.org/data/2.5/weather?"
            city_name = city
            complete_url = base_url + "appid=" + api_key + "&q=" + city_name
            response = requests.get(complete_url)
            x = response.json()
            channel = interaction.channel
            if x["cod"] != "404":
                async with channel.typing():
                    y = x["main"]
                    current_temperature = y["temp"]
                    current_temperature_celsiuis = str(round(current_temperature - 273.15))
                    current_pressure = y["pressure"]
                    current_humidity = y["humidity"]
                    z = x["weather"]
                    weather_description = z[0]["description"]
                    ts_weather_description = ts.google(weather_description, translator=ts.google, to_language='uk')
                    eather_description = z[0]["description"]
                    embed = nextcord.Embed(title=f"üåà –ü–æ–≥–æ–¥–∞ –≤ {city_name}",
                                           color=nextcord.Color.red())
                    embed.add_field(name="‚õÖ –û–ø–∏—Å:", value=f"**{ts_weather_description}**", inline=False)
                    embed.add_field(name="üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞(C):", value=f"**{current_temperature_celsiuis}¬∞C**",
                                    inline=False)
                    embed.add_field(name="üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è(%):", value=f"**{current_humidity}%**", inline=False)
                    embed.add_field(name="üóú –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫(hPa):", value=f"**{current_pressure}hPa**", inline=False)
                    embed.set_thumbnail(url="https://i.ibb.co/CMrsxdX/weather.png")
                    embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
                    embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                    await channel.send(embed=embed, delete_after=60)
            else:
                embed = nextcord.Embed(title=":x:–¢—Ä—è—Å—Å—è —Ç–≤–æ—ó–π –º–∞—Ç–µ—Ä—ñ! –í–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –º—ñ—Å—Ç–æ!",
                                       description='–í–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–ª–∏ –º—ñ—Å—Ç–æ, –¥–µ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.',
                                       colour=nextcord.Color.red())
                embed.add_field(name='–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –∫–æ–º–∞–Ω–¥–∏:', value='```.weather citi```', inline=False)
                embed.add_field(name='–ù–∞–∑–≤—É –º—ñ—Å—Ç–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç–∏:', value='```–Ω–∞ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π —Ç–∞ –º–æ—Å–∫–∞–ª—å—Å—å–∫—ñ–π –º–æ–≤—ñ.```',
                                inline=False)
                embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
                embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                await interaction.send(embed=embed, ephemeral=True, delete_after=60)

    # google
    @nextcord.slash_command(name=f'googl–µ', description=f'üíô –ü—Ä–æ–≥—É–≥–ª–∏—Ç–∏ üíõ')
    async def googl–µ(self, interaction: nextcord.Interaction, query):
        api_key = "AIzaSyApJI_7WlmSuoWq4idbfD98x-pIsh0tJ6Q"
        cx = "95e537e092f254d28"
        url = f"https://www.googleapis.com/customsearch/v1?q={query}&key={api_key}&cx={cx}"
        r = requests.get(url)
        data = r.json()
        # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
        if "items" in data:
            embed = nextcord.Embed(title='–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:', colour=nextcord.Color.red())
            for i in range(5):
                item = data["items"][i]
                title = item["title"]
                link = item["link"]
                embed.add_field(name=title, value=link, inline=False)

            embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed.set_thumbnail(
                url="https://media.discordapp.net/attachments/1016748092810346507/1062107301839904768/Google-G-Logo-PNG-Image.png?width=671&height=671")
            await interaction.send(embed=embed, delete_after=60)
        else:
            await interaction.send("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    # imagine
    #@nextcord.slash_command(name=f'imagine', description=f'üíô –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è üíõ')
    @commands.has_role(1008805712715055104 or 1010216550927699969)
    async def imagine(self, interaction: nextcord.Interaction, params=SlashOption(
        name="–ø–∞—Ä–∞–º–µ—Ç—Ä–∏",
        description="—á–∏–º –±—ñ–ª—å—à–µ –≤–∏ –æ–ø–∏—à–∏—Ç–µ, —Ç–∏–º –∫—Ä–∞—â–µ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –±—ñ–ª—å—à —Ç–æ—á–Ω–∏–º"
    )):
        roles = interaction.user.roles
        if nextcord.utils.get(roles, name="imaginete"):
            embed = nextcord.Embed(title=f"üñº –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏. üïë",
                                   description=f'{interaction.user.mention}, –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä—É—î –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.',
                                   colour=nextcord.Color.red())
            embed.set_image(url="https://rb.ru/media/upload_tmp/2018/d3.gif")
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed1 = nextcord.Embed(title=f"üñº –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏.. üïë",
                                    description=f'{interaction.user.mention}, –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä—É—î –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.',
                                    colour=nextcord.Color.red())
            embed1.set_image(url="https://rb.ru/media/upload_tmp/2018/d3.gif")
            embed1.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            embed2 = nextcord.Embed(title=f"üñº –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏... üïë",
                                    description=f'{interaction.user.mention}, –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä—É—î –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.',
                                    colour=nextcord.Color.red())
            embed2.set_image(url="https://rb.ru/media/upload_tmp/2018/d3.gif")
            embed2.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            msg = await interaction.send(embed=embed)
            await msg.edit(embed=embed1)
            await msg.edit(embed=embed2)
            model = replicate.models.get("tstramer/midjourney-diffusion")
            version = model.versions.get("436b051ebd8f68d23e83d22de5e198e0995357afef113768c20f0b6fcef23c8b")
            image = version.predict(prompt=params, num_inference_steps=75)[0]
            embed = nextcord.Embed(title=f"üñºÔ∏è –û—Å—å, —â–æ –≤ –Ω–∞—Å –≤–∏–π—à–ª–æ:",
                                   description=f'–î–ª—è –∫—Ä–∞—â–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤–≤–µ–¥—ñ—Ç—å –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó. {interaction.user.mention}',
                                   colour=nextcord.Color.red())
            embed.set_image(url=image)
            download_button = Button(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", style=ButtonStyle.blurple, url=image)
            my_view = View(timeout=180)
            my_view.add_item(download_button)
            await msg.edit(embed=embed, view=my_view, delete_after=1)
            await interaction.send(embed=embed, view=my_view)
        else:
            embed = nextcord.Embed(title=f"‚ùó–¢–∏ –Ω–µ –º–∞—î—à –¥–æ—Å—Ç—É–ø—É‚ùó",
                                   description=f'–î–ª—è —Ç–æ–≥–æ —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø–∏—à—ñ—Ç—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó <@872455283560042526>. –í–∏–±–∞—á—Ç–µ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ, {interaction.user.mention}',
                                   colour=nextcord.Color.red())
            embed.set_image(url="https://i.gifer.com/origin/3a/3ad09d4905511990cccc98d904bd1e94.gif")
            embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
            await interaction.send(embed=embed)

    # Short your link
    @nextcord.slash_command(name=f'short', description=f'üíô –°–∫–æ—Ä–æ—Ç–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è üíõ')
    async def short(self, interaction: nextcord.Interaction, url=SlashOption(
        name="–ø–∞—Ä–∞–º–µ—Ç—Ä–∏",
        description="—á–∏–º –±—ñ–ª—å—à–µ –≤–∏ –æ–ø–∏—à–∏—Ç–µ, —Ç–∏–º –∫—Ä–∞—â–µ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –±—ñ–ª—å—à —Ç–æ—á–Ω–∏–º"
    )):
        url = url
        s = pyshorteners.Shortener()
        shorturl = s.tinyurl.short(url)
        embed = nextcord.Embed(title='üîó –û—Å—å –≤–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:', description=f"Link: {shorturl}",
                               colour=nextcord.Color.red())
        embed.set_footer(text=interaction.user.name, icon_url=interaction.user.avatar.url)
        embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
        await interaction.send(embed=embed, delete_after=60)

    #@nextcord.slash_command(name=f'gpt', description=f'üíô –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ ChatCPT üíõ')
    @commands.has_role(1008805712715055104 or 1010216550927699969)
    async def gpt(self, interaction: nextcord.Interaction, prompt=SlashOption(
        name="–∑–∞–ø–∏—Ç",
        description="—á–∏–º –±—ñ–ª—å—à–µ –≤–∏ –æ–ø–∏—à–∏—Ç–µ, —Ç–∏–º –∫—Ä–∞—â–µ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –±—ñ–ª—å—à —Ç–æ—á–Ω–∏–º"
    )):
        msg = await interaction.send('üïë –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏... –ì–µ–Ω–µ—Ä—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—åüöÄ')
        await msg.edit('üïë –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏. –ì–µ–Ω–µ—Ä—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—åüöÄ')
        await msg.edit('üïë –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏.. –ì–µ–Ω–µ—Ä—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—åüöÄ')
        my_set = {prompt,}
        my_list = list(my_set)
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "assistant", "content": f"{prompt}"},]).get("choices")[0].message
        await msg.edit(response)

        # lexica
        @nextcord.slash_command(name=f'lexica', description=f'üíô –í–µ–ª–µ—Ç–µ–Ω—Å—å–∫–∞ –±–∞–∑–∞ –≤–∂–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å üíõ')
        @commands.has_role(1008805712715055104 or 1010216550927699969)
        async def lexica(self, interaction: nextcord.Interaction, params=SlashOption(
            name="–ø–∞—Ä–∞–º–µ—Ç—Ä–∏",
            description="—á–∏–º –±—ñ–ª—å—à–µ –≤–∏ –æ–ø–∏—à–∏—Ç–µ, —Ç–∏–º –∫—Ä–∞—â–µ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π –º–æ–≤—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –±—ñ–ª—å—à —Ç–æ—á–Ω–∏–º"
        )):
            roles = interaction.user.roles
            if nextcord.utils.get(roles, name="imaginete"):
                url = f'https://lexica.art/api/v1/search?q={params}'
                response = requests.get(url)
                data = response.json()
                src = data['images'][0].get('gallery')
                embed = nextcord.Embed(title=f"üñºÔ∏è –û—Å—å, —â–æ –º–∏ –∑–Ω–∞–π—à–ª–∏:",
                                       description=f'–î–ª—è –∫—Ä–∞—â–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤–≤–µ–¥—ñ—Ç—å –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó. {interaction.user.mention}',
                                       colour=nextcord.Color.red(),
                                       url=src)
                embed.set_image(url="https://lexica.art/lexica-meta.png")
                download_button = Button(label="–í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é", style=ButtonStyle.blurple, url=src)
                my_view = View(timeout=180)
                my_view.add_item(download_button)
                await interaction.send(embed=embed, view=my_view)
            else:
                embed = nextcord.Embed(title=f"‚ùó–¢–∏ –Ω–µ –º–∞—î—à –¥–æ—Å—Ç—É–ø—É‚ùó",
                                       description=f'–î–ª—è —Ç–æ–≥–æ —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø–∏—à—ñ—Ç—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó <@872455283560042526>. –í–∏–±–∞—á—Ç–µ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ, {interaction.user.mention}',
                                       colour=nextcord.Color.red())
                embed.set_image(url="https://i.gifer.com/origin/3a/3ad09d4905511990cccc98d904bd1e94.gif")
                embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                await interaction.send(embed=embed)

        # upscale
       # @nextcord.slash_command(name=f'upscale', description=f'üíô –ó–±—ñ–ª—å—à–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–µ–∑ –≤—Ç—Ä–∞—Ç–∏ —è–∫–æ—Å—Ç—ñ üíõ')
        @commands.has_role(1008805712715055104 or 1010216550927699969)
        async def upscale(self, interaction: nextcord.Interaction, url=SlashOption(
            name="–ø–æ—Å–∏–ª–∞–Ω–Ω—è",
            description="–Ω–∞ –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"
        )):
            roles = interaction.user.roles
            if nextcord.utils.get(roles, name="imaginete"):
                embed = nextcord.Embed(title=f"üñº –¢—Ä–µ–±–∞ —Ç—Ä–æ—à–∫–∏ –ø–æ—á–µ–∫–∞—Ç–∏... üïë",
                                       description=f'{interaction.user.mention}, –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä—É—î –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.',
                                       colour=nextcord.Color.red())
                embed.set_image(url="https://rb.ru/media/upload_tmp/2018/d3.gif")
                embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                msg = await interaction.send(embed=embed)
                r = requests.post(
                    "https://api.deepai.org/api/waifu2x",
                    data={
                        'image': f'{url}',
                    },
                    headers={'api-key': 'ec5d28fe-7a02-4004-90b0-4848465e7740'}
                )
                r = r.json()
                image = r["output_url"]
                embed = nextcord.Embed(title=f"üñºÔ∏è –û—Å—å, —â–æ –≤ –Ω–∞—Å –≤–∏–π—à–ª–∞:",
                                       description=f'–ú–∏ –∑–±—ñ–ª—å—à–∏–ª–∏ –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. {interaction.user.mention}',
                                       colour=nextcord.Color.red(),
                                       url=image)
                embed.set_image(url=image)
                download_button = Button(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", style=ButtonStyle.blurple, url=image)
                my_view = View(timeout=180)
                my_view.add_item(download_button)
                await msg.edit(embed=embed, view=my_view)
            else:
                embed = nextcord.Embed(title=f"‚ùó–¢–∏ –Ω–µ –º–∞—î—à –¥–æ—Å—Ç—É–ø—É‚ùó",
                                       description=f'–î–ª—è —Ç–æ–≥–æ —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø–∏—à—ñ—Ç—å –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó <@872455283560042526>. –í–∏–±–∞—á—Ç–µ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ, {interaction.user.mention}',
                                       colour=nextcord.Color.red())
                embed.set_image(url="https://i.gifer.com/origin/3a/3ad09d4905511990cccc98d904bd1e94.gif")
                embed.set_author(name=self.bot.user.name, icon_url=self.bot.user.avatar.url)
                await interaction.send(embed=embed)

def register_user_cogs(bot: Bot) -> None:
    bot.add_cog(__MainUserCog(bot))
